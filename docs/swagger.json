{
    "swagger": "2.0",
    "info": {
        "description": "Implementation of Pismo Test API.",
        "title": "Pismo Test API",
        "contact": {
            "name": "Tcharles Pereira da Silva",
            "url": "https://tcharlez.in"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/accounts": {
            "post": {
                "description": "Create one account for the document number.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create one account for the document number.",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "account_create.AccountCreateInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account_create.AccountCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account_create.AccountCreateResponse"
                        }
                    },
                    "400": {
                        "description": "invalid input"
                    },
                    "500": {
                        "description": "not created account"
                    }
                }
            }
        },
        "/accounts/{accountID}": {
            "get": {
                "description": "Get one account based in the query string parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get one account based in the query string parameter.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "accountID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account_get.AccountGetResponse"
                        }
                    },
                    "400": {
                        "description": "account not found"
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "description": "Create a transaction based in the request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create a transaction based in the request",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "transaction_create.TransactionCreateInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transaction_create.TransactionCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transaction_create.TransactionCreateResponse"
                        }
                    },
                    "400": {
                        "description": "invalid input"
                    },
                    "500": {
                        "description": "not created transaction"
                    }
                }
            }
        }
    },
    "definitions": {
        "account_create.AccountCreateInput": {
            "type": "object",
            "required": [
                "document_number"
            ],
            "properties": {
                "document_number": {
                    "type": "string"
                }
            }
        },
        "account_create.AccountCreateResponse": {
            "type": "object",
            "required": [
                "account_id",
                "document_number"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "document_number": {
                    "type": "string"
                }
            }
        },
        "account_get.AccountGetResponse": {
            "type": "object",
            "required": [
                "account_id",
                "document_number"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "document_number": {
                    "type": "string"
                }
            }
        },
        "transaction_create.TransactionCreateInput": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "operation_type_id": {
                    "type": "integer"
                }
            }
        },
        "transaction_create.TransactionCreateResponse": {
            "type": "object",
            "required": [
                "account_id",
                "amount",
                "operation_type_id",
                "transaction_id"
            ],
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "operation_type_id": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        }
    }
}